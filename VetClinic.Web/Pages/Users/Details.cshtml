@page
@model VetClinic.Web.Pages.Users.DetailsModel
@{
    ViewData["Title"] = "User Details";
}

<div class="container-fluid">
    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2><i class="fas fa-user text-primary me-2"></i>User Details</h2>
                <div>
                    <a href="/Users" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to List
                    </a>
                    @if (ViewSessionHelper.IsInAnyRole(ViewContext.HttpContext.Session, "Admin", "Manager") && 
                         Model.User.Id != ViewSessionHelper.GetUserId(ViewContext.HttpContext.Session))
                    {
                        <a href="/Users/Edit/@Model.User.Id" class="btn btn-primary">
                            <i class="fas fa-edit me-1"></i>Edit
                        </a>
                    }
                </div>
            </div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="/Users">Users</a></li>
                    <li class="breadcrumb-item active">Details</li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- User Details -->
    <div class="row">
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-id-card me-2"></i>Profile</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <div class="avatar-lg mx-auto">
                            <i class="fas fa-user fa-3x"></i>
                        </div>
                        <h4 class="mt-3">@Model.User.FullName</h4>
                        <span class="badge @(Model.User.Role switch 
                        {
                            "Admin" => "bg-danger",
                            "Manager" => "bg-warning",
                            "Doctor" => "bg-success",
                            "Staff" => "bg-info",
                            _ => "bg-primary"
                        })">
                            <i class="fas fa-user-tag me-1"></i>@Model.User.Role
                        </span>
                        <span class="badge @(Model.User.IsActive ? "bg-success" : "bg-secondary") ms-1">
                            <i class="fas @(Model.User.IsActive ? "fa-check" : "fa-times") me-1"></i>
                            @(Model.User.IsActive ? "Active" : "Inactive")
                        </span>
                    </div>

                    <div class="mb-3">
                        <h6 class="text-primary">User ID</h6>
                        <p>@Model.User.Id</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="text-primary">Email</h6>
                        <p>
                            <i class="fas fa-envelope me-1"></i>
                            <a href="mailto:@Model.User.Email">@Model.User.Email</a>
                        </p>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.User.PhoneNumber))
                    {
                        <div class="mb-3">
                            <h6 class="text-primary">Phone</h6>
                            <p><i class="fas fa-phone me-1"></i>@Model.User.PhoneNumber</p>
                        </div>
                    }

                    <div class="mb-3">
                        <h6 class="text-primary">Joined</h6>
                        <p>
                            <i class="fas fa-calendar me-1"></i>
                            @Model.User.CreatedDate.ToString("MMMM dd, yyyy")
                        </p>
                    </div>

                    @if (Model.User.LastLoginDate.HasValue)
                    {
                        <div class="mb-3">
                            <h6 class="text-primary">Last Login</h6>
                            <p>
                                <i class="fas fa-clock me-1"></i>
                                @Model.User.LastLoginDate.Value.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                            </p>
                        </div>
                    }
                </div>
            </div>

            @if (ViewSessionHelper.IsInAnyRole(ViewContext.HttpContext.Session, "Admin", "Manager") && 
                 Model.User.Id != ViewSessionHelper.GetUserId(ViewContext.HttpContext.Session))
            {
                <div class="card mb-4">
                    <div class="card-header bg-danger text-white">
                        <h5 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>Admin Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            @if (Model.User.IsActive)
                            {
                                <button type="button" class="btn btn-warning" onclick="toggleUserStatus(@Model.User.Id, 'deactivate')">
                                    <i class="fas fa-ban me-1"></i>Deactivate User
                                </button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-success" onclick="toggleUserStatus(@Model.User.Id, 'activate')">
                                    <i class="fas fa-check-circle me-1"></i>Activate User
                                </button>
                            }
                            
                            <button type="button" class="btn btn-outline-danger" onclick="deleteUser(@Model.User.Id, '@Model.User.FullName')">
                                <i class="fas fa-trash-alt me-1"></i>Delete User
                            </button>
                            
                            <button type="button" class="btn btn-outline-warning" onclick="resetPassword(@Model.User.Id, '@Model.User.FullName')">
                                <i class="fas fa-key me-1"></i>Reset Password
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-8">
            @if (Model.User.Role == "Doctor")
            {
                <div class="card mb-4">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0"><i class="fas fa-calendar-check me-2"></i>Upcoming Appointments</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.DoctorAppointments != null && Model.DoctorAppointments.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Date & Time</th>
                                            <th>Pet</th>
                                            <th>Service</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var appointment in Model.DoctorAppointments)
                                        {
                                            <tr>
                                                <td>
                                                    <strong>@appointment.AppointmentTime.ToString("MMM dd, yyyy")</strong><br>
                                                    <small>@appointment.AppointmentTime.ToString("hh:mm tt")</small>
                                                </td>
                                                <td>
                                                    <strong>@appointment.Pet?.Name</strong><br>
                                                    <small>@appointment.Pet?.Species</small>
                                                </td>
                                                <td>@appointment.Service?.Name</td>
                                                <td>
                                                    <span class="badge @(appointment.Status switch 
                                                    {
                                                        "Scheduled" => "bg-info",
                                                        "Confirmed" => "bg-success",
                                                        "InProgress" => "bg-warning text-dark",
                                                        "Completed" => "bg-light text-dark",
                                                        "Cancelled" => "bg-secondary",
                                                        "NoShow" => "bg-danger",
                                                        _ => "bg-secondary"
                                                    })">
                                                        @appointment.Status
                                                    </span>
                                                </td>
                                                <td>
                                                    <a href="/Appointments/Details/@appointment.Id" class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                                <p class="text-muted">No upcoming appointments for this doctor.</p>
                            </div>
                        }
                    </div>
                </div>
            }

            @if (Model.User.Role == "Customer")
            {
                <div class="card mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0"><i class="fas fa-paw me-2"></i>Customer's Pets</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.CustomerPets != null && Model.CustomerPets.Any())
                        {
                            <div class="row">
                                @foreach (var pet in Model.CustomerPets)
                                {
                                    <div class="col-md-6 mb-3">
                                        <div class="card h-100">
                                            <div class="card-body">
                                                <div class="d-flex align-items-center mb-2">
                                                    <div class="pet-avatar me-3">
                                                        <i class="fas fa-paw fa-lg"></i>
                                                    </div>
                                                    <div>
                                                        <h5 class="mb-0">@pet.Name</h5>
                                                        <span class="badge bg-light text-dark">@pet.Species</span>
                                                        @if (!string.IsNullOrEmpty(pet.Breed))
                                                        {
                                                            <span class="badge bg-light text-dark">@pet.Breed</span>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="mt-2">
                                                    <small class="text-muted">
                                                        <i class="fas fa-birthday-cake me-1"></i>
                                                        @(pet.BirthDate.HasValue ? pet.BirthDate.Value.ToString("MMM dd, yyyy") : "Unknown")
                                                    </small><br>
                                                    <small class="text-muted">
                                                        <i class="fas fa-weight me-1"></i>
                                                        @(pet.Weight.HasValue ? $"{pet.Weight} kg" : "Unknown weight")
                                                    </small>
                                                </div>
                                                <div class="mt-3">
                                                    <a href="/Pets/Details/@pet.Id" class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-eye me-1"></i>View Details
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <i class="fas fa-paw fa-3x text-muted mb-3"></i>
                                <p class="text-muted">No pets registered for this customer.</p>
                            </div>
                        }
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0"><i class="fas fa-calendar-alt me-2"></i>Recent Appointments</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.CustomerAppointments != null && Model.CustomerAppointments.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Date & Time</th>
                                            <th>Pet</th>
                                            <th>Service</th>
                                            <th>Doctor</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var appointment in Model.CustomerAppointments)
                                        {
                                            <tr>
                                                <td>
                                                    <strong>@appointment.AppointmentTime.ToString("MMM dd, yyyy")</strong><br>
                                                    <small>@appointment.AppointmentTime.ToString("hh:mm tt")</small>
                                                </td>
                                                <td>@appointment.Pet?.Name</td>
                                                <td>@appointment.Service?.Name</td>
                                                <td>Dr. @appointment.Doctor?.FullName</td>
                                                <td>
                                                    <span class="badge @(appointment.Status switch 
                                                    {
                                                        "Scheduled" => "bg-info",
                                                        "Confirmed" => "bg-success",
                                                        "InProgress" => "bg-warning text-dark",
                                                        "Completed" => "bg-light text-dark",
                                                        "Cancelled" => "bg-secondary",
                                                        "NoShow" => "bg-danger",
                                                        _ => "bg-secondary"
                                                    })">
                                                        @appointment.Status
                                                    </span>
                                                </td>
                                                <td>
                                                    <a href="/Appointments/Details/@appointment.Id" class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                                <p class="text-muted">No appointments for this customer.</p>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@if (ViewSessionHelper.IsInAnyRole(ViewContext.HttpContext.Session, "Admin", "Manager") && 
     Model.User.Id != ViewSessionHelper.GetUserId(ViewContext.HttpContext.Session))
{
    <!-- Delete User Form -->
    <form id="deleteForm" method="post" asp-page-handler="Delete" style="display: none;">
        <input name="userId" id="deleteUserId" type="hidden" />
    </form>

    <!-- Toggle Status Form -->
    <form id="toggleStatusForm" method="post" asp-page-handler="ToggleStatus" style="display: none;">
        <input name="userId" id="toggleStatusUserId" type="hidden" />
        <input name="activate" id="toggleStatusActivate" type="hidden" />
    </form>

    <!-- Reset Password Form -->
    <form id="resetPasswordForm" method="post" asp-page-handler="ResetPassword" style="display: none;">
        <input name="userId" id="resetPasswordUserId" type="hidden" />
    </form>
}

@section Scripts {
    <script>
        function deleteUser(userId, userName) {
            if (confirm(`Are you sure you want to delete user "${userName}"? This action cannot be undone.`)) {
                document.getElementById('deleteUserId').value = userId;
                document.getElementById('deleteForm').submit();
            }
        }

        function toggleUserStatus(userId, action) {
            const activate = action === 'activate';
            const message = activate ? 
                'Are you sure you want to activate this user?' : 
                'Are you sure you want to deactivate this user?';
            
            if (confirm(message)) {
                document.getElementById('toggleStatusUserId').value = userId;
                document.getElementById('toggleStatusActivate').value = activate;
                document.getElementById('toggleStatusForm').submit();
            }
        }

        function resetPassword(userId, userName) {
            if (confirm(`Are you sure you want to reset the password for "${userName}"? They will receive an email with instructions.`)) {
                document.getElementById('resetPasswordUserId').value = userId;
                document.getElementById('resetPasswordForm').submit();
            }
        }
    </script>
}

<style>
    .avatar-lg {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
    }
    
    .pet-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
    }
</style>
